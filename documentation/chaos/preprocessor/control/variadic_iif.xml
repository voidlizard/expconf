<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/control/variadic_iif.h" author="Paul Mensonides" date="2011">
<overview>
	The <self/> header defines a macro that acts as an "if-else" construct.
</overview>

<macro id="VARIADIC_IIF" group="if">
	<abstract>
		The <VARIADIC_IIF/> macro expands to one of two alternatives depending on its first argument.
	</abstract>
	<usage lang="C99">
		<syntax><VARIADIC_IIF/>(bit)(...)(...)</syntax>
		<param id="bit">
			The condition that determines whether the macro expands to the first or second <code>__VA_ARGS__</code>.
			Valid values are <code>0</code> and <code>1</code>.
		</param>
		<param id="..." optional="1">
			The resulting expression if <var>bit</var> is <code>1</code>.  This is the first of the two <code>__VA_ARGS__</code> in the syntax.
		</param>
		<param id="..." optional="1">
			The resulting expression if <var>bit</var> is <code>0</code>.  This is the second of the two <code>__VA_ARGS__</code> in the syntax.
		</param>
	</usage>
	<para>
		If <var>bit</var> expands to <code>0</code>, this macro expands to the second <code>__VA_ARGS__</code>.
		Otherwise, it expands to the first <code>__VA_ARGS__</code>.
	</para>
	<para>
		This macro does <em>not</em> perform a Boolean conversion on <var>bit</var>.
		If this conversion is desirable, <VARIADIC_IF/> may be used instead.
	</para>
	<para>
		This macro is lazy.
		If <var>bit</var> is <code>1</code>, only the first <code>__VA_ARGS__</code> is evaluated.
		Likewise, if <var>bit</var> is <code>0</code>, only the second <code>__VA_ARGS__</code> is evaluated.
	</para>
	<para>
		This macro is similar to <IIF/> except that it allows variadic content in its <em>true</em> branch at the cost of preventing expansion of a function-like macros resulting from that branch.
		<snippet>
			#define A() 1
			#define B() 2

			<VARIADIC_IIF/>(1)(A, B)() // A()
			<VARIADIC_IIF/>(0)(A, B)() // 2
		</snippet>
	</para>
	<derivative id="VARIADIC_IIF_ID" lang="C99"/>
	<derivative id="VARIADIC_IIF_" lang="C99"/>
</macro>

</header>
