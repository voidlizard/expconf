<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/control/inline_unless.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines a macro that expands to an expression if a condition is <code>0</code>.
</overview>

<macro id="INLINE_UNLESS" group="if">
	<abstract>
		The <INLINE_UNLESS/> macro expands to its second argument if its first argument is <code>0</code>.
	</abstract>
	<usage lang="C99">
		<syntax><INLINE_UNLESS/>(bit)(...)</syntax>
		<param id="bit">
			The condition that determines whether the macro should expand to <code>__VA_ARGS__</code> or nothing.
			Valid values are <code>0</code> and <code>1</code>.
		</param>
		<param id="..." optional="1">
			The resulting expression if <var>bit</var> is <code>0</code>.
		</param>
	</usage>
	<usage lang="C/C++">
		<syntax><INLINE_UNLESS/>(bit)(x)</syntax>
		<param id="bit">
			The condition that determines whether the macro should expand to <var>x</var> or nothing.
			Valid values are <code>0</code> and <code>1</code>.
		</param>
		<param id="x">
			The resulting expression if <var>bit</var> is <code>0</code>.
		</param>
	</usage>
	<para>
		If <var>bit</var> expands to <code>1</code>, this macro expands to nothing.
		Otherwise, it expands to <var>x</var> or <code>__VA_ARGS__</code>.
	</para>
	<para>
		This macro does <em>not</em> perform a Boolean conversion on <var>bit</var>.
		If this conversion is desirable, <UNLESS/> may be used instead.
	</para>
	<para>
		This macro is lazy.
		If <var>bit</var> is <code>1</code>, <var>x</var> (or <code>__VA_ARGS__</code>) is not evaluated.
	</para>
	<listing>
		#include <chaos-preprocessor-control-inline_unless.h/>
		
		#define VALID() 1
		#define INVALID() VALID(!) // too many arguments
		
		<INLINE_UNLESS/>(1)(INVALID()) //
		<INLINE_UNLESS/>(0)(VALID())   // 1
	</listing>
	<derivative id="INLINE_UNLESS_ID"/>
	<derivative id="INLINE_UNLESS_" lang="C99"/>
</macro>

</header>
