<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/seq/enumerate.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines a macro that enumerates the elements of a <link id="sequence"/>.
</overview>

<macro id="SEQ_ENUMERATE" type="indirect" group="enumeration">
	<abstract>
		The <SEQ_ENUMERATE/> macro enumerates the elements of its argument.
	</abstract>
	<usage lang="C99">
		<syntax><SEQ_ENUMERATE/>(seq)</syntax>
		<param id="seq" optional="1">
			The <link id="sequence"/> whose elements are to be enumerated.
		</param>
	</usage>
	<usage lang="C/C++">
		<syntax><SEQ_ENUMERATE/>(seq)</syntax>
		<param id="seq">
			The <link id="sequence"/> whose elements are to be enumerated.
		</param>
	</usage>
	<para>
		This macro expands to a comma-separated list containing the elements of <var>seq</var>.
	</para>
	<para>
		This macro uses <link id="sequential iteration"/>.
		As a result, the algorithm is theoretically capable of processing <link id="sequences"/> containing an <em>unrestricted</em> number of elements.
	</para>
	<listing>
		#include <chaos-preprocessor-config.h/>
		#include <chaos-preprocessor-seq-enumerate.h/>
		
		<SEQ_ENUMERATE/>((a)(b)(c)) // a, b, c
		
		#if <VARIADICS/>
		
		<SEQ_ENUMERATE/>() //
		<SEQ_ENUMERATE/>((a, b)(c)) // a, b, c
		
		#endif
	</listing>
	<derivative id="SEQ_ENUMERATE_ID"/>
	<derivative id="SEQ_ENUMERATE_" lang="C99"/>
</macro>

</header>
