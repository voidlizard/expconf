<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/seq/auto/transform.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines an algorithm that transforms the elements of a <link id="sequence"/> with a user-specified operation.
</overview>

<macro id="SEQ_AUTO_TRANSFORM" type="object" group="transformation">
	<abstract>
		The <SEQ_AUTO_TRANSFORM/> macro transforms each element of its second argument with the operation specified by its first argument.
	</abstract>
	<usage lang="C99">
		<syntax><SEQ_AUTO_TRANSFORM/>(op, seq)</syntax>
		<param id="op">
			<para>
				The operation used to transform each element of <var>seq</var>.
				This operation must be either a <link id="λ expression"/> or a macro name that refers to a macro with a signature compatible with the following pseudo-signature:
				<snippet>
					op(s, elem<sup>†</sup>)
				</snippet>
			</para>
			<para>
				<sup>†</sup>
				If <var>seq</var> contains elements that have varying arities, <var>elem</var> must be <code>...</code>.
				Otherwise, <var>elem</var> must be the number of parameters that corresponds to the arity of each element in <var>seq</var>.
			</para>
		</param>
		<param id="seq">
			The <link id="sequence"/> whose elements are to be transformed.
		</param>
	</usage>
	<usage lang="C99">
		<syntax><SEQ_AUTO_TRANSFORM/>(op, seq, ...)</syntax>
		<param id="op">
			<para>
				The operation used to transform each element of <var>seq</var>.
				This operation must be either a <link id="λ expression"/> or a macro name that refers to a macro with a signature compatible with the following pseudo-signature:
				<snippet>
					op(s, elem<sup>†</sup>, data<sup>‡</sup>)
				</snippet>
			</para>
			<para>
				<sup>†</sup>
				The <var>elem</var> pseudo-parameter must be the number of parameters that corresponds to the arity of each element in <var>seq</var>.
			</para>
			<para>
				<sup>‡</sup>
				The <var>data</var> pseudo-parameter must be either <code>...</code> or the number of parameters that corresponds to the number of arguments in the auxiliary data, <code>__VA_ARGS__</code>.
			</para>
		</param>
		<param id="seq">
			The <link id="sequence"/> whose elements are to be transformed.
		</param>
		<param id="..." optional="1">
			Auxiliary data to be passed through the algorithm to the operation.
		</param>
	</usage>
	<para>
		The <SEQ_AUTO_TRANSFORM/> macro is a <link id="higher-order thunk"/> that deduces the current <link id="higher-order entry point"/> and invokes <SEQ_TRANSFORM/>.
	</para>
	<para>
		This macro may not be used if <link id="bypass semantics"/> are in effect.
	</para>
	<listing>
		#include <chaos-preprocessor-arithmetic-inc.h/>
		#include <chaos-preprocessor-config.h/>
		#include <chaos-preprocessor-lambda-ops.h/>
		#include <chaos-preprocessor-seq-auto-transform.h/>
		
		#if <VARIADICS/>
		
		<SEQ_AUTO_TRANSFORM/>(
		    <SEQ_AUTO_TRANSFORM_/>(
		        <ESCAPE/>(<INC_/>(<ARG/>(1))),
		        <ARG/>(1)
		    ),
		    ((0)(1)(2))((3)(4)(5))((6)(7)(8))
		)
		// ((1)(2)(3))((4)(5)(6))((7)(8)(9))
		
		#endif
	</listing>
	<derivative id="SEQ_AUTO_TRANSFORM_ID" lang="C99"/>
	<derivative id="SEQ_AUTO_TRANSFORM_" lang="C99"/>
</macro>

</header>
