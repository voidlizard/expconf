<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/seq/to_tuple.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines a macro that converts a <link id="sequence"/> to a <link id="tuple"/>.
</overview>

<macro id="SEQ_TO_TUPLE" type="indirect" group="conversion(sequence-tuple) conversion(sequence)">
	<abstract>
		The <SEQ_TO_TUPLE/> macro converts a <link id="sequence"/> to a <link id="tuple"/>.
	</abstract>
	<usage lang="C99">
		<syntax><SEQ_TO_TUPLE/>(seq)</syntax>
		<param id="seq" optional="1">
			The <link id="sequence"/> to be converted.
		</param>
	</usage>
	<usage lang="C/C++">
		<syntax><SEQ_TO_TUPLE/>(seq)</syntax>
		<param id="seq">
			The <link id="sequence"/> to be converted.
		</param>
	</usage>
	<para>
		This macro expands to a <link id="tuple"/> containing the elements of <var>seq</var>.
	</para>
	<para>
		In C99, <link id="sequences"/> can contain elements of arities other than one.
		If such a <link id="sequence"/> is converted to a <link id="tuple"/>, the result is a <link id="tuple"/> containing all of the sub-elements of each element in the <link id="sequence"/>--which may be surprising.
		<snippet>
			<SEQ_TO_TUPLE/>((a, b)(c)) // (a, b, c)
		</snippet>
	</para>
	<x-reference id="CAST"/>
	<listing>
		#include <chaos-preprocessor-seq-to_tuple.h/>
		
		<SEQ_TO_TUPLE/>((a)(b)(c)(d)) // (a, b, c, d)
	</listing>
	<derivative id="SEQ_TO_TUPLE_ID"/>
	<derivative id="SEQ_TO_TUPLE_" lang="C99"/>
</macro>

</header>
