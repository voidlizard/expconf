<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/facilities/unbox.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines a macro used to abstract empty arguments.
</overview>

<macro id="UNBOX" type="indirect" group="emptiness">
	<abstract>
		The <UNBOX/> macro is used to abstract empty arguments.
	</abstract>
	<usage lang="C99">
		<syntax><UNBOX/>(...)</syntax>
		<param id="..." optional="1">
			The argument to be unboxed.
		</param>
	</usage>
	<usage lang="C/C++">
		<syntax><UNBOX/>(x)</syntax>
		<param id="x">
			The argument to be unboxed.
		</param>
	</usage>
	<para>
		If <var>x</var> is a unary parenthetic expression, this macro expands to the contents of that unary parenthetic expression.
		In C99, if <code>__VA_ARGS__</code> is a parenthetic expression of any arity, this macro expands to the contents of that parenthetic expression.
		Otherwise, this macro expands to nothing.
	</para>
	<para>
		In C and C++, <var>x</var> must be either a unary parenthetic expression or a non-parenthetic expression.
		Any other input is invalid.
	</para>
	<para>
		This macro is used to simulate empty arguments--primarily in C (prior to C99) and C++.
	</para>
	<listing>
		#include <chaos-preprocessor-facilities-unbox.h/>
		
		#define MACRO(cv) <UNBOX/>(cv)
		
		MACRO((const))    // const
		MACRO((volatile)) // volatile
		MACRO(.)          //
	</listing>
	<derivative id="UNBOX_ID"/>
	<derivative id="UNBOX_" lang="C99"/>
</macro>

</header>
