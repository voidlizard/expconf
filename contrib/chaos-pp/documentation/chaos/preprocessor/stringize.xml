<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/stringize.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines stringizing macros.
</overview>

<macro id="STRINGIZE" group="stringizing">
	<abstract>
		The <STRINGIZE/> macro stringizes its argument after it has been expanded.
	</abstract>
	<usage lang="C99">
		<syntax><STRINGIZE/>(...)</syntax>
		<param id="..." optional="1">
			The argument to be stringized.
		</param>
	</usage>
	<usage lang="C/C++">
		<syntax><STRINGIZE/>(x)</syntax>
		<param id="x">
			The argument to be stringized.
		</param>
	</usage>
	<para>
		This macro stringizes its argument with the stringizing operator.
		<snippet>
			#__VA_ARGS__ // C99
			#x           // C and C++
		</snippet>
	</para>
	<para>
		This macro allows its argument to expand on input.
		This macro's sibling, <PRIMITIVE_STRINGIZE/>, does <em>not</em> provide this delay.
	</para>
	<para>
		Both leading and trailing whitespace are removed from the argument when it is stringized, and internal whitespace separations are each condensed to a single space character.
		<snippet>
			<STRINGIZE/>( abc ) // "abc"
			<STRINGIZE/>(1   2) // "1 2"
		</snippet>
	</para>
	<para>
		In C99, if <code>__VA_ARGS__</code> expands to a placemarker, this macro expands to an empty string literal.
		<snippet>
			<STRINGIZE/>() // ""
		</snippet>
	</para>
	<listing>
		#include <chaos-preprocessor-stringize.h/>
		
		#define A text
		
		<STRINGIZE/>(A) // "text"
	</listing>
	<derivative id="STRINGIZE_ID"/>
	<derivative id="STRINGIZE_" lang="C99"/>
</macro>

<macro id="PRIMITIVE_STRINGIZE" group="stringizing">
	<abstract>
		The <PRIMITIVE_STRINGIZE/> macro stringizes its argument before it is expanded.
	</abstract>
	<usage lang="C99">
		<syntax><PRIMITIVE_STRINGIZE/>(...)</syntax>
		<param id="..." optional="1">
			The argument to be stringized.
		</param>
	</usage>
	<usage lang="C/C++">
		<syntax><PRIMITIVE_STRINGIZE/>(x)</syntax>
		<param id="x">
			The argument to be stringized.
		</param>
	</usage>
	<para>
		This macro behaves identically to <STRINGIZE/> except that it does not allow its argument to expand before it is stringized.
	</para>
	<listing>
		#include <chaos-preprocessor-stringize.h/>
		
		#define A text
		
		<PRIMITIVE_STRINGIZE/>(A) // "A"
	</listing>
	<derivative id="PRIMITIVE_STRINGIZE_ID"/>
	<derivative id="PRIMITIVE_STRINGIZE_" lang="C99"/>
</macro>

</header>
