<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/logical/bitnand.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines a logical NAND operator.
</overview>

<macro id="BITNAND" group="nand">
	<abstract>
		The <BITNAND/> macro expands to the logical NAND of its operands.
	</abstract>
	<usage>
		<syntax><BITNAND/>(x)(y)</syntax>
		<param id="x">
			The left operand.
			Valid values are <code>0</code> and <code>1</code>.
		</param>
		<param id="y">
			The right operand.
			Valid values are <code>0</code> and <code>1</code>.		
		</param>
	</usage>
	<para>
		If <var>x</var> and <var>y</var> are both <code>1</code>, this macro expands to <code>0</code>.
		Otherwise, it expands to <code>1</code>.
	</para>
	<para>
		This macro does <em>not</em> perform Boolean conversions on its operands.
		If this conversion is desirable, <NAND/> may be used instead.
	</para>
	<para>
		This macro is lazy.
		If <var>x</var> is <code>0</code>, <var>y</var> is not evaluated.
	</para>
	<listing>
		#include <chaos-preprocessor-debug-failure.h/>
		#include <chaos-preprocessor-logical-bitnand.h/>
		
		<BITNAND/>(1)(1) // 0
		<BITNAND/>(1)(0) // 1
		
		<BITNAND/>(0)(<FAILURE/>()) // 1
	</listing>
	<derivative id="BITNAND_ID"/>
	<derivative id="BITNAND_" lang="C99"/>
</macro>

</header>
