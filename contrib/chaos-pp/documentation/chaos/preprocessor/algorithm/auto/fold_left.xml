<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/algorithm/auto/fold_left.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines an algorithm that accumulates the elements of a <link id="generic data structure"/> from the first element to the last element.
</overview>

<macro id="AUTO_FOLD_LEFT" type="object" group="left-accumulation">
	<abstract>
		The <AUTO_FOLD_LEFT/> macro accumulates the elements of its second argument with the operation specified by its first argument.
	</abstract>
	<usage lang="C99">
		<syntax><AUTO_FOLD_LEFT/>(op, g, ...)</syntax>
		<param id="op">
			<para>
				The operation that is to be used to accumulate the elements of <var>g</var>.
				This operation must be either a <link id="λ expression"/> or a macro name that refers to a macro with a signature compatible with the following pseudo-signature:
				<snippet>
					op(s, elem<sup>†</sup>, state<sup>‡</sup>)
				</snippet>
			</para>
			<para>
				<sup>†</sup>
				If the type of <var>g</var> is non-variadic, <var>elem</var> must be the number of parameters that corresponds to the number of sub-elements in each element of <var>g</var>.
				Otherwise, <var>elem</var> must be a single parameter.
			</para>
			<para>
				<sup>‡</sup>
				The <var>state</var> pseudo-parameter must be either <code>...</code> or the number of parameters that corresponds to the number of arguments in the accumulation state, <code>__VA_ARGS__</code>.
			</para>
		</param>
		<param id="g">
			The <link id="generic data structure"/> whose elements are to be accumulated.
		</param>
		<param id="..." optional="1">
			The initial state of the accumulation.
		</param>
	</usage>
	<para>
		The <AUTO_FOLD_LEFT/> macro is a <link id="higher-order thunk"/> that deduces the current <link id="higher-order entry point"/> and invokes <FOLD_LEFT/>.
	</para>
	<para>
		This macro may not be used if <link id="bypass semantics"/> are in effect.
	</para>
	<x-reference id="AUTO_FOLD_RIGHT"/>
	<listing>
		#include <chaos-preprocessor-algorithm-auto-fold_left.h/>
		#include <chaos-preprocessor-config.h/>
		#include <chaos-preprocessor-list-core.h/>
		
		#if <VARIADICS/>
		
		#define OP(s, elem, ...) [elem, __VA_ARGS__]
		
		<AUTO_FOLD_LEFT/>(
		    OP,
		    (<LIST/>) (x, (y, (z, ...))),
		    ...
		)
		// [z, [y, [x, ...]]]
		
		#endif
	</listing>
	<derivative id="AUTO_FOLD_LEFT_ID" lang="C99"/>
	<derivative id="AUTO_FOLD_LEFT_" lang="C99"/>
</macro>

</header>
