<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/algorithm/size.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines an algorithm that counts the elements in a <link id="generic data structure"/>.
</overview>

<macro id="SIZE" group="size">
	<abstract>
		The <SIZE/> macro counts the elements in its argument.
	</abstract>
	<usage>
		<syntax><SIZE/>(g)</syntax>
		<param id="g">
			The <link id="generic data structure"/> whose elements are to be counted.
		</param>
	</usage>
	<para>
		This macro expands to the number of elements in <var>g</var>.
		If <var>g</var> contains more than <LIMIT_MAG/> elements, the result is <link id="saturated"/> to <LIMIT_MAG/>.
	</para>
	<para>
		The efficiency of the algorithm's use of the <link id="recursion backend"/> can be described in terms of the number of <link id="recursion steps"/> required to complete the algorithm.
		The asymptotic upper and lower bounds are Î˜(<x-var>n</x-var>+1), where <x-var>n</x-var> is the number of elements in <var>g</var>.
	</para>
	<para>
		This macro uses <link id="bypass semantics"/>.
		If <link id="bypass semantics"/> are already in effect, <SIZE_BYPASS/> must be used instead.
	</para>
	<listing>
		#include <chaos-preprocessor-algorithm-size.h/>
		#include <chaos-preprocessor-string-core.h/>
		
		<SIZE/>((<STRING/>) C 9 9) // 3
	</listing>
	<derivative id="SIZE_ID"/>
	<derivative id="SIZE_" lang="C99"/>
	<derivative id="SIZE_BYPASS">
		<usage>
			<syntax><SIZE_BYPASS/>(s, g)</syntax>
		</usage>
		<derivative id="SIZE_BYPASS_ID"/>
		<derivative id="SIZE_BYPASS_" lang="C99"/>
	</derivative>
</macro>

</header>
