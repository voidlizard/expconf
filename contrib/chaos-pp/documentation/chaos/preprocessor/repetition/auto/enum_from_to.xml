<?xml version="1.0" encoding="UTF-8"?>

<!-- **************************************************************************
     *                                                                        *
     *    (C) Copyright Paul Mensonides 2003-2005.                            *
     *                                                                        *
     *    Distributed under the Boost Software License, Version 1.0.          *
     *    (See accompanying file LICENSE).                                    *
     *                                                                        *
     *    See http://chaos-pp.sourceforge.net for the most recent version.    *
     *                                                                        *
     ************************************************************************** -->

<header name="chaos/preprocessor/repetition/auto/enum_from_to.h" author="Paul Mensonides" date="2003-2005">
<overview>
	The <self/> header defines an algorithm that enumerates a user-specified target for each number in a specified range.
</overview>

<macro id="AUTO_ENUM_FROM_TO" type="object" group="enumeration">
	<abstract>
		The <AUTO_ENUM_FROM_TO/> macro enumerates its third argument for each number in the range specified by its first two arguments.
	</abstract>
	<usage lang="C99">
		<syntax><AUTO_ENUM_FROM_TO/>(from, to, macro)</syntax>
		<param id="from">
			The lower bound of the range of numbers for which <var>macro</var> is to be repeated.
			Valid values range from <code>0</code> to <var>to</var>.
		</param>
		<param id="to">
			The upper bound of the range of numbers for which <var>macro</var> is to be repeated.
			Valid values range from <var>from</var> to <LIMIT_MAG/>.
		</param>
		<param id="macro">
			The target that is to be repeated.
			This target must be either a <link id="λ expression"/> or a macro name that refers to a macro with a signature compatible with the following pseudo-signature:
			<snippet>
				macro(s, n)
			</snippet>
		</param>
	</usage>
	<usage lang="C99">
		<syntax><AUTO_ENUM_FROM_TO/>(from, to, macro, ...)</syntax>
		<param id="from">
			The lower bound of the range of numbers for which <var>macro</var> is to be repeated.
			Valid values range from <code>0</code> to <var>to</var>.
		</param>
		<param id="to">
			The upper bound of the range of numbers for which <var>macro</var> is to be repeated.
			Valid values range from <var>from</var> to <LIMIT_MAG/>.
		</param>
		<param id="macro">
			<para>
				The target that is to be repeated.
				This target must be either a <link id="λ expression"/> or a macro name that refers to a macro with a signature compatible with the following pseudo-signature:
				<snippet>
					macro(s, n, data<sup>†</sup>)
				</snippet>
			</para>
			<para>
				<sup>†</sup>
				The <var>data</var> pseudo-parameter must be either <code>...</code> or the number of parameters that corresponds to the number of arguments in the auxiliary data, <code>__VA_ARGS__</code>.
			</para>
		</param>
		<param id="..." optional="1">
			Auxiliary data to be passed through the algorithm to the target.
		</param>
	</usage>
	<para>
		The <AUTO_ENUM_FROM_TO/> macro is a <link id="higher-order thunk"/> that deduces the current <link id="higher-order entry point"/> and invokes <ENUM_FROM_TO/>.
	</para>
	<para>
		This macro may not be used if <link id="bypass semantics"/> are in effect.
	</para>
	<listing>
		#include <chaos-preprocessor-config.h/>
		#include <chaos-preprocessor-repetition-auto-enum_from_to.h/>
		
		#if <VARIADICS/>
		
		#define MACRO(s, n, param) param ## n
		
		<AUTO_ENUM_FROM_TO/>(5, 10, MACRO, class T)
		// class T5, class T6, class T7, class T8, class T9
		
		#endif
	</listing>
	<derivative id="AUTO_ENUM_FROM_TO_ID" lang="C99"/>
	<derivative id="AUTO_ENUM_FROM_TO_" lang="C99"/>
</macro>

</header>
